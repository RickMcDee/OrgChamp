@page "/teams"

@attribute [Authorize]

@inject UserService UserService

@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudContainer Class="d-flex justify-center">
    @if (!UserService.User.Teams.Any())
    {
        <MudElement Class="d-flex flex-column mt-10 gap-1">
            <MudText Typo="Typo.body1">You are not part of any team yet.</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateTeam">Create a new team</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary">Join an existing team</MudButton>
        </MudElement>
    }
    else
    {
        <MudElement Class="d-flex flex-column mt-10 gap-1">
            <MudText Typo="Typo.body1">You are part of the following teams:</MudText>
            <MudList>
                @foreach (var team in UserService.User.Teams)
                {
                    <MudListItem Text="@team.TeamName" />
                }
            </MudList>
        </MudElement>
    }
</MudContainer>

@code {

    private async Task ReloadUsersTeams()
    {
        await UserService.ReloadUserDetails();
        StateHasChanged();
    }

    private async Task CreateTeam()
    {
        var options = new DialogOptions() { MaxWidth = MaxWidth.Medium };
        var dialog = DialogService.Show<AddTeamDialog>("Create a new team", options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await ReloadUsersTeams();
            Snackbar.Add("Team created", Severity.Success);
        }
    }
}
